version: "3.2"

services:
  audiolizer:
    image: apembroke/audiolizer:latest
    ports:
      - "80:5000"
    environment:
      AUDIOLIZER_TEMP: /home/audiolizer/audiolizer/history
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "audiolizer:server"]
    volumes:
      - type: bind
        source: ${PWD}
        target: /home/audiolizer
    working_dir: /home/audiolizer/audiolizer
#dev config
  audiolizer-dev:
    image: apembroke/audiolizer:latest
    ports:
      - "80:8051"
      - "8888:8888"
    environment:
      AUDIOLIZER_TEMP: /home/audiolizer/audiolizer/history
    command: ["python", "audiolizer.py"]
    # command: ["jupyter", "notebook", "audiolizer.py", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root"]
    volumes:
      - type: bind
        source: ${PWD}
        target: /home/audiolizer
    working_dir: /home/audiolizer/audiolizer

  alpine:
    # Makefile fills PROJECT_NAME to current directory name.
    # add UID to allow multiple users run this in parallel
    container_name: ${PROJECT_NAME}_${HOST_UID:-4000}
    hostname: ${PROJECT_NAME}
    # These variables are passed into the container.
    environment:
      - UID=${HOST_UID:-4000}
    # Run with user priviliges by default.
    user: ${HOST_USER:-nodummy}
    image: ${PROJECT_NAME}:${HOST_USER:-nodummy}
    build:
      context: .
      # Build for current user.
      target: user
      dockerfile: alpine
      # These variables are passed to Dockerfile.
      args:
        - HOST_UID=${HOST_UID:-4000}
        - HOST_USER=${HOST_USER:-nodummy}
        - ALPINE_VERSION=${ALPINE_VERSION}
        - PASSWORD=${PASSWORD}
    # Run container as a service. Replace with something useful.
    command: ["tail", "-f", "/dev/null"]
    # Copy current (git-) project into container.
    volumes:
      - ${HOME:-.}:/home/${HOST_USER}/

